name: commit-with-another-repository

on:
  push:
    branches: [ "main", "test-workflow"]

env:
  ORGANIZATION: anti-fragile-study
  REPOSITORY: algorithm-study
  PROBLEM_LIST_FILE: ../algorithm-study/README.md

jobs:
  auto-commit-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: List pushed files
        id: find-target-problem
        run: |
          changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          for file_name in $changed_files; do
            is_not_readme=$(echo $file_name | { grep "README.md" || true; })
            if [[ -z $is_not_readme ]];then
              echo "FILE_NAME=$(printf $file_name | sed 's/"//g')" >> $GITHUB_ENV
            fi 
          done
          echo ${{ env.FILE_NAME }}
      - name: clone target repository
        run: git clone "https://$GITHUB_ACTOR:${{ secrets.GH_PAT }}@github.com/${{ env.ORGANIZATION }}/${{ env.REPOSITORY }}"
      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: run python script
        id: run-python-script
        run: python problem/parser.py $FILE_NAME $PROBLEM_LIST_FILE
        env:
          FILE_NAME: ${{ env.FILE_NAME }}
          PROBLEM_LIST_FILE: ${{ env.PROBLEM_LIST_FILE }}
      - name: create commit message, and push target repository branch
        id: zzuni
        run: |
          if [[ ! -e "problem/result.txt" ]];then
            echo "can't found problem in problem list"
            exit 0
          fi
          
          IFS=$'\n'
          while read -r line; do
            echo $line
            echo "$line" >> "$GITHUB_OUTPUT"
          done < problem/result.txt
      - name: test1
        run : |
          echo "${{ steps.zzuni.outputs.WEEK_NUMBER }}"
          echo "${{ steps.zzuni.outputs.TYPE }}"
          echo "${{ steps.zzuni.outputs.PROBLEM_NUMBER }}"
      - name: install gh
        run : |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y
          
          ls -al
      - name: gh cli test
        run : |
          cd algorithm-study
          gh pr list --author "@me"
          echo "-------------"
          gh pr list
        env:
          GH_TOKEN: ${{ github.token }}
