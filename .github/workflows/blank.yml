name: commit-with-another-repository

on:
  push:
    branches: [ "main", "test-workflow" ]

jobs:
  extract-problem:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: List pushed files
        id: find-target-problem
        run: |
          changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          for file in $changed_files; do
            result=$(echo $file | { grep "README.md" || true; })
            if [[ -z $result ]];then
              file_name=$(printf $file | sed 's/"//g')
              echo "FILE_NAME=$file_name" >> $GITHUB_ENV
              printf "Content of $file_name:"
            fi 
          done
          echo ${{ env.FILE_NAME }}
      - name: Clone target repository
        run: git clone https://github.com/anti-fragile-study/algorithm-study.git
      - run: ls -al
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: run python script
        id: run-python-script
        run: python problem/parser.py $FILE_NAME
        env:
          FILE_NAME: ${{ env.FILE_NAME }}
      - name: test
        run: |
          cat problem/result.txt
          echo "\n"
          test=$(cat problem/result.txt)
          week_number=$(echo $test | grep -oE 'week=[0-9]+' | sed 's/^week=//')
          type=$(echo $test | grep -oE 'type=[A-Z]+' | sed 's/^type=//')
          number=$(echo $test | grep -oE 'number=[0-9]+' | sed 's/^number=//')
          name=$(echo $test | grep -oE 'name=([^\n]+)' | sed 's/^name=//' | sed 's/...$//')
          language=$(echo $test | grep -oE 'language=[a-z]+' | sed 's/^language=//')
          echo $week_number
          echo $type
          echo $number
          echo $name
          echo $language
      - name: Clone another repository
        run: |
          ### Find wanted directory
          IFS=$'\n'
          directories=$(ls -d */ | sort)
          last_dir=""
          for dir in $directories;do
            if [[ ${#dir} -eq 8 ]];then
              last_dir="$dir"
            fi
          done
  
          echo $last_dir
          cat $last_dir"problem.md"
            
          ### Settings
          username=protoseo
          now=11
          branches=$(git branch -r)
          
          ### Has this week branch?
          ### echo "$branches" | { grep "origin/$username/week-$now" || true; }
          target_branch="$branches" | { grep "origin/$username/week-$now" || true; }
          echo $target_branch
#          if [[ -z target_branch ]];then
#            git checkout -b "$username/week-$now"
#            echo $(git branch --show-current)
#          else
#            git pull origin "$username/week-$now"
  #          echo $(git branch --show-current)
#          fi
